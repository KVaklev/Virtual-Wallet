@model CardsAllUsersViewModel

@{
    this.ViewData["Title"] = "Speed Pay - Users' Payment Methods";
    var username = User.FindFirst(ClaimTypes.Name);
    var loggedUserId = User.FindFirst(ClaimTypes.NameIdentifier);
    var isAdmin = User.FindFirst("IsAdmin");
}

<style>
    #userResults {
        display: none;
    }
</style>

@{

    var parameters = new Dictionary<string, string>
 {
      {"Username", Model.CardQueryParameters.Username},
      {"CardType", Model.CardQueryParameters.CardType},
      {"ExpirationDate", Model.CardQueryParameters.ExpirationDate},
      {"Balance", Model.CardQueryParameters.Balance.ToString()},
      {"SortBy",Model.CardQueryParameters.SortBy},
      {"SortOrder",Model.CardQueryParameters.SortOrder}
 };

    Func<string, int, string> MaskDigits = (input, visibleDigits) =>
       {
           if (string.IsNullOrEmpty(input))
           {
               return string.Empty;
           }

           visibleDigits = Math.Min(visibleDigits, input.Length);
           string maskedPart = new string('X', input.Length - visibleDigits);
           string visiblePart = input.Substring(input.Length - visibleDigits, visibleDigits);

           return maskedPart + visiblePart;
       };
}

}
<body>
    <div class="container mt-5">

    <form asp-controller="Card" asp-action="Details" method="get">

            <div class="container">
                <div class="row">
                    <div class="col-lg-9">
                        <div class="row">
                            <div class="col-lg-12">
                                <form class="bg-white shadow-sm rounded p-3 mb-4 col-sm-5 col-md-4">
                                    <div class="d-flex flex-wrap mb-2">
                                        <input type="text" name="Username" placeholder="Username" class="form-control me-1" style="max-width: 145px; height: 40px;" />
                                            <div class="d-flex align-items-center">
                                                <span class="form-check me-3">
                                                    <input type="radio" name="CardType" value="Credit" class="form-check-input" id="creditRadio" />
                                                    <label class="form-check-label" for="creditRadio">Credit</label>
                                                </span>
                                                <span class="form-check">
                                                    <input type="radio" name="CardType" value="Debit" class="form-check-input" id="debitRadio" />
                                                    <label class="form-check-label" for="debitRadio">Debit</label>
                                                </span>
                                            </div>
                                        <input type="submit" value="Search" class="btn btn-primary btn-sm ms-auto" />
                                    </div>
                                <label class="form-check-label mb-2">Sort by:</label>
                                <div class="form-check form-check-inline mb-2">
                                    <input class="form-check-input" type="radio" value="@SortCriteria.ExpirationDate" name="SortBy">
                                    <label class="form-check-label">Expiration Date</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" value="@SortCriteria.Balance" name="SortBy">
                                    <label class="form-check-label" for="paymentsReceived">Balance</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" value="@SortCriteria.CardType" name="SortBy">
                                    <label class="form-check-label">Card Type</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <label class="form-check-label"><strong>/ascending/</strong></label>
                                </div>
                                <br>
                </form>
                            </div>
                        </div>
                     </div>
                 </div>
            </div>
                               
            <div class="table-responsive">
                <table class="table table-bordered table-condensed table-hover">
                    <thead class="table-dark text-center">
                                            <tr>
                            <th style ="width: 2%">Username</th>
                            <th style ="width: 2%">Card Type</th>
                            <th style ="width: 8%">Card Details</th>
                            <th style ="width: 2%">Balance</th>
                            <th style ="width: 2%">Limit</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @for (int j = 0; j < Model.Cards.Data.Count(); j++)
                                            {
                                                var currentCard = Model.Cards.Data[j];
                                                <tr>
                                <td class="text-center" style="word-wrap: break-word;">@currentCard.Username</td>
                                <td class="text-center" style="word-wrap: break-word;">@currentCard.CardType</td>
                                <td class="text-center" style="word-wrap: break-word;">@MaskDigits(currentCard.CardNumber, 4) / @MaskDigits(currentCard.CheckNumber, 1) / @currentCard.ExpirationDate.ToString("yyyy-MM-dd")</td>
                                <td class="text-center" style="word-wrap: break-word;">@currentCard.Balance / @currentCard.CurrencyCode</td>
                                <td class="text-center" style="word-wrap: break-word;">
                                                        @if (currentCard.CardType.ToString() == "Credit")
                                                        {
                                                            @currentCard.CreditLimit
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

    </form>
    </div>
    
    @{
        string prevButtonState = this.Model.Cards.Data.HasNextPage ? "" : "disabled";
        string nextButtonState = this.Model.Cards.Data.HasNextPage ? "" : "disabled";
    }
    <div class="d-flex justify-content-center margin: 5px">
        <a asp-controller="Card" asp-action="Details" asp-all-route-data="@parameters" asp-route-PageNumber="@(this.Model.Cards.Data.PageNumber-1)" class="btn btn-link @prevButtonState">Prev</a>
        <div class="d-flex align-items-center">
            @{
                int currentPageNumber = this.Model.Cards.Data.PageNumber;
                for (int i = 1; i <= this.Model.Cards.Data.TotalPages; i++)
                {
                    if (i == currentPageNumber)
                    {
                        <span class="btn m-1">@i</span>
                    }
                    else
                    {
                        <span><a asp-controller="Card" asp-all-route-data="@parameters" asp-action="Details" asp-route-PageNumber="@i" class=" btn btn-link m-1">@i</a></span>
                    }
                }
            }
        </div>
        <a asp-controller="Card" asp-action="Details" asp-all-route-data="@parameters" asp-route-PageNumber="@(this.Model.Cards.Data.PageNumber+1)" class="btn btn-link @nextButtonState">Next</a>
    </div>

</body>